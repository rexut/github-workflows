name: Docker Publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# reusable workflow
on:
  workflow_call:
    inputs:
      ghr-free-disk:
        description: "Clear up runners disk space (default off)."
        default: false
        required: false
        type: boolean

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # documentation URL into repository
  REPO_README: ${{ github.server_url }}/${{ github.repository }}/blob/main/README.rst

run-name: Merge (${{ github.repository }})

jobs:
  merge:
    name: Merge (${{ github.repository }})

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Prepare GitHub runner environment
        run: |
          echo "IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV

      # Free Disk Space on Ubuntu runners, clear up to 35 GB disk space
      # https://github.com/jlumbroso/free-disk-space
      - name: Free disk space
        if: ${{ inputs.ghr-free-disk }}
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          # Tool cache: Saved 8.3GiB
          tool-cache: true
          # Android library: Saved 7.5GiB
          android: true
          # .NET runtime: Saved 1.6GiB
          dotnet: true
          # Haskell runtime: Saved 5.4GiB
          haskell: true
          # Large misc. packages: Saved 4.8GiB
          large-packages: true
          # Docker images: Saved 3.2GiB
          docker-images: true
          # Swap storage: Saved 4.0GiB
          swap-storage: true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Recent Commit Authors
        id: recent-commits-authors
        run: |
          jsonlist=$(git log --format="%an <%ae>" | \
                     sort -u | tr '\n' '\000' | \
                     jq -R -s -c 'split("\u0000")')
          echo "jsonlist=$jsonlist" >> $GITHUB_OUTPUT

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          labels: |
            org.opencontainers.image.vendor=TiaC Systems Network
            org.opencontainers.image.authors=${{ steps.recent-commits-authors.outputs.jsonlist }}
            org.opencontainers.image.documentation=${{ env.REPO_README }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' \
                      <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect \
            ${{ env.IMAGE }}:${{ steps.meta.outputs.version }}
